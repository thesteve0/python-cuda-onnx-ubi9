# This workflow is named "Publish Docker Image to GHCR"
name: Publish Docker Image to GHCR

# This workflow will run on every push event to the 'main' branch
on:
  push:
    branches:
      - main

jobs:
  build-and-publish:
    # Use the latest version of Ubuntu as the runner for this job
    runs-on: ubuntu-latest

    # Define the permissions required for this job.
    # 'packages: write' is necessary to push images to the GitHub Container Registry.
    permissions:
      contents: read
      packages: write

    steps:
      # Step 1: Check out the repository's code so the workflow can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Log in to the GitHub Container Registry (ghcr.io)
      # The GITHUB_TOKEN is automatically created by Actions to authenticate.
      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Build the Docker image from the Dockerfile and push it to GHCR
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          # The context is the root of the repository
          context: .
          # The path to the Dockerfile
          file: ./Dockerfile
          # This flag indicates that the image should be pushed after building
          push: true
          # Define the tags for the image. We create two:
          # 1. 'latest' for the most recent build on the main branch.
          # 2. The commit SHA for a unique, immutable reference to this specific build.
          # The image name is dynamically constructed using your repository owner and the specified name.
          tags: |
            ghcr.io/${{ github.repository_owner }}/python-cuda-onnx-ubi9:latest
            ghcr.io/${{ github.repository_owner }}/python-cuda-onnx-ubi9:${{ github.sha }}
